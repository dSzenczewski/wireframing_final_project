{"ast":null,"code":"import _defineProperty from \"/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/home_screen/HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks';\nimport { getFirestore } from 'redux-firestore'; //const db = getFirestore();\n\nconst profile = getState().firebase.profile;\nlet key = -1;\n\nclass HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewList = () => {\n      console.log(\"HURRAY\");\n      /*let newObject = {};\n      newObject.items = [];\n      newObject.key = 0;\n      newObject.name = \"Unknown\";\n      newObject.owner = \"Unknown\";\n      createTodoList(newObject);*/\n\n      key = key + 1;\n      getFirestore().collection('todoLists').doc(key.toString()).set({\n        name: \"Unknown\",\n        owner: profile.firstName,\n        key: key,\n        items: []\n      });\n      this.render();\n    };\n  }\n\n  render() {\n    if (!this.props.auth.uid) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(TodoListLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"@todo\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \"List Maker\"), React.createElement(\"div\", {\n      className: \"home_new_list_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"home_new_list_button\",\n      onClick: this.handleNewList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Create a New To Do List\")))));\n  }\n\n}\n\nconst createTodoList = todoList => (dispatch, getState, {\n  getFirestore\n}) => {\n  const fireStore = getFirestore();\n  const profile = getState().firebase.profile;\n  const authorId = getState().firebase.auth.uid;\n  fireStore.collection('todoLists').add(_objectSpread({}, todoList, {\n    authorFirstName: profile.firstName,\n    authorLastName: profile.lastName,\n    authorId,\n    createdAt: new Date()\n  })).then(() => dispatch({\n    type: 'CREATE_TODO_LIST',\n    todoList\n  })).catch(err => dispatch({\n    type: 'CREATE_TODO_LIST_ERROR',\n    err\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(HomeScreen);","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/home_screen/HomeScreen.js"],"names":["React","Component","connect","compose","NavLink","Redirect","firestoreConnect","TodoListLinks","getFirestore","profile","getState","firebase","key","HomeScreen","handleNewList","console","log","collection","doc","toString","set","name","owner","firstName","items","render","props","auth","uid","createTodoList","todoList","dispatch","fireStore","authorId","add","authorFirstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CAEA;;MACQC,O,GAAYC,QAAQ,GAAGC,Q,CAAvBF,O;AACR,IAAIG,GAAG,GAAG,CAAC,CAAX;;AACA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/Ba,aAF+B,GAEf,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;;;;;;;AAMAJ,MAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACAJ,MAAAA,YAAY,GAAGS,UAAf,CAA0B,WAA1B,EAAuCC,GAAvC,CAA2CN,GAAG,CAACO,QAAJ,EAA3C,EAA2DC,GAA3D,CAA+D;AAC3DC,QAAAA,IAAI,EAAE,SADqD;AAE3DC,QAAAA,KAAK,EAAEb,OAAO,CAACc,SAF4C;AAG3DX,QAAAA,GAAG,EAAEA,GAHsD;AAI3DY,QAAAA,KAAK,EAAE;AAJoD,OAA/D;AAMA,WAAKC,MAAL;AACH,KAlB8B;AAAA;;AAoB/BA,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAArB,EAA0B;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,eADJ,EAMI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKd,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADR,CANJ,CALJ,CADJ,CADJ;AAsBH;;AA/C8B;;AAiDnC,MAAMe,cAAc,GAAGC,QAAQ,IAAI,CAACC,QAAD,EAAWrB,QAAX,EAAqB;AAAEF,EAAAA;AAAF,CAArB,KAA0C;AACzE,QAAMwB,SAAS,GAAGxB,YAAY,EAA9B;AADyE,QAEjEC,OAFiE,GAErDC,QAAQ,GAAGC,QAF0C,CAEjEF,OAFiE;AAGzE,QAAMwB,QAAQ,GAAGvB,QAAQ,GAAGC,QAAX,CAAoBgB,IAApB,CAAyBC,GAA1C;AACAI,EAAAA,SAAS,CAACf,UAAV,CAAqB,WAArB,EAAkCiB,GAAlC,mBACKJ,QADL;AAEEK,IAAAA,eAAe,EAAE1B,OAAO,CAACc,SAF3B;AAGEa,IAAAA,cAAc,EAAE3B,OAAO,CAAC4B,QAH1B;AAIEJ,IAAAA,QAJF;AAKEK,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AALb,MAMGC,IANH,CAMQ,MAAMT,QAAQ,CAAC;AACrBU,IAAAA,IAAI,EAAE,kBADe;AAErBX,IAAAA;AAFqB,GAAD,CANtB,EASIY,KATJ,CASUC,GAAG,IAAIZ,QAAQ,CAAC;AACxBU,IAAAA,IAAI,EAAE,wBADkB;AAExBE,IAAAA;AAFwB,GAAD,CATzB;AAaD,CAjBH;;AAmBA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,IAAI,EAAEkB,KAAK,CAAClC,QAAN,CAAegB;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAexB,OAAO,CAClBD,OAAO,CAAC0C,eAAD,CADW,EAElBtC,gBAAgB,CAAC,CACf;AAAEW,EAAAA,UAAU,EAAE;AAAd,CADe,CAAD,CAFE,CAAP,CAKbJ,UALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks'\nimport { getFirestore } from 'redux-firestore';\n\n//const db = getFirestore();\nconst { profile } = getState().firebase;\nlet key = -1;\nclass HomeScreen extends Component {\n    \n    handleNewList = () => {\n        console.log(\"HURRAY\");\n        /*let newObject = {};\n        newObject.items = [];\n        newObject.key = 0;\n        newObject.name = \"Unknown\";\n        newObject.owner = \"Unknown\";\n        createTodoList(newObject);*/\n        key = key + 1;\n        getFirestore().collection('todoLists').doc(key.toString()).set({\n            name: \"Unknown\",\n            owner: profile.firstName,\n            key: key,\n            items: [],\n        });\n        this.render();\n    }    \n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m4\">\n                        <TodoListLinks />\n                    </div>\n\n                    <div className=\"col s8\">\n                        <div className=\"banner\">\n                            @todo<br />\n                            List Maker\n                        </div>\n                        \n                        <div className=\"home_new_list_container\">\n                                <button className=\"home_new_list_button\" onClick={this.handleNewList}>\n                                    Create a New To Do List\n                                </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst createTodoList = todoList => (dispatch, getState, { getFirestore }) => {\n    const fireStore = getFirestore();\n    const { profile } = getState().firebase;\n    const authorId = getState().firebase.auth.uid;\n    fireStore.collection('todoLists').add({\n      ...todoList,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId,\n      createdAt: new Date(),\n    }).then(() => dispatch({\n      type: 'CREATE_TODO_LIST',\n      todoList,\n    })).catch(err => dispatch({\n      type: 'CREATE_TODO_LIST_ERROR',\n      err,\n    }));\n  };\n  \nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists' },\n    ]),\n)(HomeScreen);"]},"metadata":{},"sourceType":"module"}