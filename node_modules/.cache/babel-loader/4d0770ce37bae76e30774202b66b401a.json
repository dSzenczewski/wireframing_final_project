{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFirestore } from 'redux-firestore'; //const db = getFirestore().collection('todoLists');\n\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoItem: {},\n      desc: \"\",\n      assign: \"\",\n      date: \"\",\n      check: \"\"\n    };\n\n    this.submit = () => {\n      if (this.state != null) {\n        if (this.state.desc != null) this.props.todoItem.description = this.state.desc;\n        if (this.state.assign != null) this.props.todoItem.assigned_to = this.state.assign;\n        if (this.state.date != null) this.props.todoItem.due_date = this.state.date;\n        if (this.state.check != null) this.props.todoItem.completed = this.state.check;\n      }\n\n      this.props.loadList(this.props.todoList);\n    };\n\n    this.cancel = () => {\n      console.log(this.props);\n\n      if (this.props.newItem) {\n        this.props.todoList.items.pop();\n      }\n\n      var key = this.props.match.params.key;\n      this.props.history.push('/todoList/' + key.toString());\n    };\n\n    this.getName = () => {//var temp = db.doc(key.toString());\n    };\n\n    this.description = event => {\n      console.log(\"YAY\");\n      this.setState({\n        desc: event.target.value\n      });\n    };\n\n    this.assigned = event => {\n      this.setState({\n        assign: event.target.value\n      });\n    };\n\n    this.date = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n\n    this.check = event => {\n      this.setState({\n        check: event.target.checked\n      });\n    };\n\n    this.componentWillMount = async () => {\n      const key = this.props.match.params.key;\n      const index = this.props.match.params.index;\n      const db = await getFirestore().collection(\"todoLists\").doc(key.toString()).get();\n      this.setState({\n        todoItem: db.data().items[index]\n      });\n      this.setState({\n        desc: this.state.todoItem.description,\n        assign: this.state.todoItem.assigned_to,\n        date: this.state.todoItem.due_date,\n        check: this.state.todoItem.completed\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      class: \"item_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Item: \"), React.createElement(\"span\", {\n      id: \"list_item_index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_description_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_item_card_description\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"LIST_ITEM_CARD_DESCRIPTION\",\n      class: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"list_description_textfield\",\n      onChange: this.description,\n      defaultValue: this.state.todoItem.description,\n      class: \"textBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_assigned_to_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"LIST_ITEM_CARD_ASSIGNED_TO\",\n      class: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Assigned to:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"list_assigned_to_textfield\",\n      onChange: this.assigned,\n      defaultValue: this.state.todoItem.assigned_to,\n      class: \"textBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_date_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_item_due_date\",\n      class: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"list_date_picker\",\n      onChange: this.date,\n      defaultValue: this.state.todoItem.due_date,\n      class: \"textBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_completed_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_item_completed\",\n      class: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"list_checkbox\",\n      onChange: this.check,\n      defaultChecked: this.state.todoItem.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"buttons_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"submit\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"cancel\",\n      onClick: this.cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"div\", {\n      id: \"list_items_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","getFirestore","ItemScreen","state","todoItem","desc","assign","date","check","submit","props","description","assigned_to","due_date","completed","loadList","todoList","cancel","console","log","newItem","items","pop","key","match","params","history","push","toString","getName","event","setState","target","value","assigned","checked","componentWillMount","index","db","collection","doc","get","data","render","propTypes","currentScreen","string","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { getFirestore } from 'redux-firestore';\n\n//const db = getFirestore().collection('todoLists');\n\nexport class ItemScreen extends Component {\n    state = {\n        todoItem: {},\n        desc: \"\",\n        assign: \"\",\n        date: \"\",\n        check: \"\"\n    }\n\n    submit = () => {\n        if(this.state != null){\n            if(this.state.desc != null) this.props.todoItem.description = this.state.desc;\n            if(this.state.assign != null) this.props.todoItem.assigned_to = this.state.assign;\n            if(this.state.date != null) this.props.todoItem.due_date = this.state.date;\n            if(this.state.check != null) this.props.todoItem.completed = this.state.check;\n        }\n        this.props.loadList(this.props.todoList);\n    }\n\n    cancel = () => {\n        console.log(this.props);\n        if(this.props.newItem){\n            \n            this.props.todoList.items.pop();\n        }\n        var key = this.props.match.params.key;\n        this.props.history.push('/todoList/' + key.toString());\n    }\n\n    getName = () => {\n        \n        //var temp = db.doc(key.toString());\n        \n    }\n\n    description = (event) => {\n        console.log(\"YAY\");\n        this.setState({desc: event.target.value});\n    }\n\n    assigned = (event) => {\n        this.setState({assign: event.target.value});\n    }\n\n    date = (event) => {\n        this.setState({date: event.target.value});\n    }\n\n    check = (event) => {\n        this.setState({check: event.target.checked});\n    }\n\n    componentWillMount = async () => {\n        const key = this.props.match.params.key;\n        const index = this.props.match.params.index;\n        const db = await getFirestore().collection(\"todoLists\").doc(key.toString()).get();\n        this.setState({todoItem: db.data().items[index]});\n        this.setState({\n            desc: this.state.todoItem.description,\n            assign: this.state.todoItem.assigned_to,\n            date: this.state.todoItem.due_date,\n            check: this.state.todoItem.completed\n        });\n    }\n    render() {\n        return (\n            <div id=\"todo_item\" class=\"item_info\">\n            <div id=\"list_item\">\n                    <span id=\"list_item\">Item: </span>\n                    <span id=\"list_item_index\"></span>\n            </div>\n            <div id=\"list_description_container\">\n                <div id=\"list_item_card_description\" class=\"text_toolbar\">\n                    <span id=\"LIST_ITEM_CARD_DESCRIPTION\" class=\"info\">Description:</span>\n                    <input type=\"text\" id=\"list_description_textfield\" onChange={this.description} defaultValue={this.state.todoItem.description} class=\"textBox\"/>\n                </div>\n                <div id=\"list_assigned_to_container\" class=\"text_toolbar\">\n                        <span id=\"LIST_ITEM_CARD_ASSIGNED_TO\" class=\"info\">Assigned to:</span>\n                        <input type=\"text\" id=\"list_assigned_to_textfield\" onChange={this.assigned} defaultValue={this.state.todoItem.assigned_to} class=\"textBox\"/>\n                        \n                </div>\n                <div id=\"list_date_container\" class=\"text_toolbar\">\n                        <span id=\"list_item_due_date\" class=\"info\">Due Date:</span>\n                        <input type=\"date\" id=\"list_date_picker\" onChange={this.date} defaultValue={this.state.todoItem.due_date} class=\"textBox\"/>\n                        \n                </div>\n                <div id=\"list_completed_container\" class=\"text_toolbar\">\n                        <span id=\"list_item_completed\" class=\"info\">Completed:</span>\n                        <input type=\"checkbox\" id=\"list_checkbox\" onChange={this.check} defaultChecked={this.state.todoItem.completed}/>\n                        \n                </div>\n                <div id=\"buttons_container\">\n                        <button id=\"submit\" onClick={this.submit}>Submit</button>\n                        <button id=\"cancel\" onClick={this.cancel}>Cancel</button>\n                </div>\n                \n            </div>\n            <div id=\"list_items_container\">\n            </div>\n        </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}