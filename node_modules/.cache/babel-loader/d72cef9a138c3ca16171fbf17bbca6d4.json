{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/home_screen/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks';\nimport { getFirestore } from 'redux-firestore'; //const db = getFirestore();\n//let key = -1;\n\nclass HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewList = async () => {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      let item = {};\n      item.description = \"description1\";\n      item.assigned_to = \"assigned_to1\";\n      item.due_date = today;\n      item.completed = false;\n      item.key = 0;\n      let item2 = {};\n      item2.description = \"description2\";\n      item2.assigned_to = \"assigned_to2\";\n      item2.due_date = today;\n      item2.completed = true;\n      item2.key = 1; //key = key + 1;\n\n      const database = await getFirestore().collection(\"todoLists\").get();\n      const key = database.size;\n      getFirestore().collection('todoLists').add({\n        name: \"New List \" + (key + 1).toString(),\n        owner: \"Unkown\",\n        key: key,\n        items: [item, item2]\n      }); // getFirestore().collection('todoLists').doc(key.toString()).set({\n      //     name: \"New List \" + (key+1).toString(),\n      //     owner: \"Unkown\",\n      //     key: key,\n      //     items: [item, item2],\n      // });\n\n      this.render();\n    };\n  }\n\n  render() {\n    if (!this.props.auth.uid) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TodoListLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"@todo\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \"List Maker\"), React.createElement(\"div\", {\n      className: \"home_new_list_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"home_new_list_button\",\n      onClick: this.handleNewList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Create a New To Do List\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(HomeScreen);","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/components/home_screen/HomeScreen.js"],"names":["React","Component","connect","compose","NavLink","Redirect","firestoreConnect","TodoListLinks","getFirestore","HomeScreen","handleNewList","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","item","description","assigned_to","due_date","completed","key","item2","database","collection","get","size","add","name","toString","owner","items","render","props","auth","uid","mapStateToProps","state","firebase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks'\nimport { getFirestore } from 'redux-firestore';\n\n//const db = getFirestore();\n//let key = -1;\nclass HomeScreen extends Component {\n    \n    handleNewList = async () => {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n\n        today = yyyy + '-' + mm + '-' + dd;\n        let item = {}\n        item.description = \"description1\";\n        item.assigned_to = \"assigned_to1\";\n        item.due_date = today;\n        item.completed = false;\n        item.key = 0;\n        let item2 = {}\n        item2.description = \"description2\";\n        item2.assigned_to = \"assigned_to2\";\n        item2.due_date = today;\n        item2.completed = true;\n        item2.key = 1;\n        //key = key + 1;\n\n        const database = await getFirestore().collection(\"todoLists\").get();\n        const key = database.size;\n\n        getFirestore().collection('todoLists').add({\n            name: \"New List \" + (key+1).toString(),\n            owner: \"Unkown\",\n            key: key,\n            items: [item, item2],\n        });\n\n        // getFirestore().collection('todoLists').doc(key.toString()).set({\n        //     name: \"New List \" + (key+1).toString(),\n        //     owner: \"Unkown\",\n        //     key: key,\n        //     items: [item, item2],\n        // });\n        this.render();\n    }    \n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m4\">\n                        <TodoListLinks />\n                    </div>\n\n                    <div className=\"col s8\">\n                        <div className=\"banner\">\n                            @todo<br />\n                            List Maker\n                        </div>\n                        \n                        <div className=\"home_new_list_container\">\n                                <button className=\"home_new_list_button\" onClick={this.handleNewList}>\n                                    Create a New To Do List\n                                </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n  \nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists' },\n    ]),\n)(HomeScreen);"]},"metadata":{},"sourceType":"module"}