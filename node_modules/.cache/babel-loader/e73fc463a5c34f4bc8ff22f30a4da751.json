{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/wireframer_final_project/src/test/DatabaseTester.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport todoJson from './TestTodoListData.json';\nimport { getFirestore } from 'redux-firestore';\n\nclass DatabaseTester extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClear = () => {\n      const fireStore = getFirestore();\n      fireStore.collection('todoLists').get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          console.log(\"deleting \" + doc.id);\n          fireStore.collection('todoLists').doc(doc.id).delete();\n        });\n      });\n    };\n\n    this.handleReset = () => {\n      const fireStore = getFirestore();\n      todoJson.todoLists.forEach(todoListJson => {\n        fireStore.collection('todoLists').add({\n          key: todoListJson.key,\n          description: todoListJson.description,\n          position_x: todoListJson.position_x,\n          position_y: todoListJson.position_y,\n          properties: todoListJson.properties,\n          font_size: todoListJson.font_size,\n          background: todoListJson.background,\n          border_color: todoListJson.border_color,\n          border_thickness: todoListJson.border_thickness,\n          border_radius: todoListJson.border_radius\n        }).then(() => {\n          console.log(\"DATABASE RESET\");\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Clear Database\"), React.createElement(\"button\", {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Reset Database\"));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    auth: state.firebase.auth,\n    firebase: state.firebase\n  };\n};\n\nexport default connect(mapStateToProps)(DatabaseTester);","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/wireframer_final_project/src/test/DatabaseTester.js"],"names":["React","connect","todoJson","getFirestore","DatabaseTester","Component","handleClear","fireStore","collection","get","then","querySnapshot","forEach","doc","console","log","id","delete","handleReset","todoLists","todoListJson","add","key","description","position_x","position_y","properties","font_size","background","border_color","border_thickness","border_radius","catch","err","render","mapStateToProps","state","auth","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,WALyC,GAK3B,MAAM;AAChB,YAAMC,SAAS,GAAGJ,YAAY,EAA9B;AACAI,MAAAA,SAAS,CAACC,UAAV,CAAqB,WAArB,EAAkCC,GAAlC,GAAwCC,IAAxC,CAA6C,UAASC,aAAT,EAAuB;AAChEA,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,GAAG,CAACG,EAA9B;AACAT,UAAAA,SAAS,CAACC,UAAV,CAAqB,WAArB,EAAkCK,GAAlC,CAAsCA,GAAG,CAACG,EAA1C,EAA8CC,MAA9C;AACH,SAHD;AAIH,OALD;AAMH,KAbwC;;AAAA,SAezCC,WAfyC,GAe3B,MAAM;AAChB,YAAMX,SAAS,GAAGJ,YAAY,EAA9B;AACAD,MAAAA,QAAQ,CAACiB,SAAT,CAAmBP,OAAnB,CAA2BQ,YAAY,IAAI;AACvCb,QAAAA,SAAS,CAACC,UAAV,CAAqB,WAArB,EAAkCa,GAAlC,CAAsC;AAC9BC,UAAAA,GAAG,EAAEF,YAAY,CAACE,GADY;AAE9BC,UAAAA,WAAW,EAAEH,YAAY,CAACG,WAFI;AAG9BC,UAAAA,UAAU,EAAEJ,YAAY,CAACI,UAHK;AAI9BC,UAAAA,UAAU,EAAEL,YAAY,CAACK,UAJK;AAK9BC,UAAAA,UAAU,EAAEN,YAAY,CAACM,UALK;AAM9BC,UAAAA,SAAS,EAAEP,YAAY,CAACO,SANM;AAO9BC,UAAAA,UAAU,EAAER,YAAY,CAACQ,UAPK;AAQ9BC,UAAAA,YAAY,EAAET,YAAY,CAACS,YARG;AAS9BC,UAAAA,gBAAgB,EAAEV,YAAY,CAACU,gBATD;AAU9BC,UAAAA,aAAa,EAAEX,YAAY,CAACW;AAVE,SAAtC,EAWOrB,IAXP,CAWY,MAAM;AACVI,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,SAbL,EAaOiB,KAbP,CAacC,GAAD,IAAS;AACdnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,SAfL;AAgBH,OAjBD;AAkBH,KAnCwC;AAAA;;AAqCzCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAK5B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKY,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ;AAKH;;AA3CwC;;AA8C7C,MAAMiB,eAAe,GAAG,UAAUC,KAAV,EAAiB;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD,IADlB;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFb,GAAP;AAIH,CALD;;AAOA,eAAerC,OAAO,CAACkC,eAAD,CAAP,CAAyB/B,cAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport todoJson from './TestTodoListData.json'\nimport { getFirestore } from 'redux-firestore';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('todoLists').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        todoJson.todoLists.forEach(todoListJson => {\n            fireStore.collection('todoLists').add({\n                    key: todoListJson.key,\n                    description: todoListJson.description,\n                    position_x: todoListJson.position_x,\n                    position_y: todoListJson.position_y,\n                    properties: todoListJson.properties,\n                    font_size: todoListJson.font_size,\n                    background: todoListJson.background,\n                    border_color: todoListJson.border_color,\n                    border_thickness: todoListJson.border_thickness,\n                    border_radius: todoListJson.border_radius\n                }).then(() => {\n                    console.log(\"DATABASE RESET\");\n                }).catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClear}>Clear Database</button>\n                <button onClick={this.handleReset}>Reset Database</button>\n            </div>)\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);"]},"metadata":{},"sourceType":"module"}