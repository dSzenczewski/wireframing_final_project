{"ast":null,"code":"import _defineProperty from \"/Users/david/Documents/School/StonyBrook/CSE 316/wireframer_final_project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/wireframer_final_project/src/components/list_screen/ListScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nclass ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      owner: ''\n    };\n\n    this.handleChange = e => {\n      const target = e.target;\n      this.setState(state => _objectSpread({}, state, {\n        [target.id]: target.value\n      }));\n    };\n  }\n\n  render() {\n    const auth = this.props.auth;\n    const todoList = this.props.todoList;\n\n    if (!auth.uid) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Todo List\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.handleChange,\n      value: todoList.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Owner\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"owner\",\n      id: \"owner\",\n      onChange: this.handleChange,\n      value: todoList.owner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(ItemsList, {\n      todoList: todoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  return {\n    todoList,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ListScreen);","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/wireframer_final_project/src/components/list_screen/ListScreen.js"],"names":["React","Component","Redirect","connect","compose","ItemsList","firestoreConnect","ListScreen","state","name","owner","handleChange","e","target","setState","id","value","render","auth","props","todoList","uid","mapStateToProps","ownProps","match","params","todoLists","firestore","data","firebase","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\n\nclass ListScreen extends Component {\n    state = {\n        name: '',\n        owner: '',\n    }\n\n    handleChange = (e) => {\n        const { target } = e;\n\n        this.setState(state => ({\n            ...state,\n            [target.id]: target.value,\n        }));\n    }\n\n    render() {\n        const auth = this.props.auth;\n        const todoList = this.props.todoList;\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"container white\">\n                <h5 className=\"grey-text text-darken-3\">Todo List</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Name</label>\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={todoList.name} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Owner</label>\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleChange} value={todoList.owner} />\n                </div>\n                <ItemsList todoList={todoList} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  const { todoLists } = state.firestore.data;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n\n  return {\n    todoList,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'todoLists' },\n  ]),\n)(ListScreen);"]},"metadata":{},"sourceType":"module"}