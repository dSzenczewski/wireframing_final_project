{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/store/ReactReduxFirebaseApp.js\";\n\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n  constructor(props) {\n    super(props); // We enhance compose in order to use Redux DevTools extension\n    // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n\n    const rrfConfig = {\n      useFirestoreForProfile: true,\n      // Firestore for Profile instead of Realtime DB\n      userProfile: 'users',\n      attachAuthIsReady: true\n    };\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n      getFirebase,\n      getFirestore\n    })), reduxFirestore(firebase) // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n    ));\n    const rrfProps = {\n      firebase,\n      config: rrfConfig,\n      dispatch: store.dispatch,\n      createFirestoreInstance // Create firestore instead of craete it in fbConfig.js\n\n    };\n    this.state = {\n      store: store,\n      rrfProps: rrfProps\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: this.state.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(ReactReduxFirebaseProvider, Object.assign({}, this.state.rrfProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ReactReduxFirebaseApp;","map":{"version":3,"sources":["/Users/david/Documents/School/StonyBrook/CSE 316/todo_hw3/src/store/ReactReduxFirebaseApp.js"],"names":["React","createStore","applyMiddleware","compose","Provider","thunk","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","firebase","rootReducer","App","ReactReduxFirebaseApp","Component","constructor","props","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rrfConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","store","withExtraArgument","rrfProps","config","dispatch","state","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,qBAAN,SAAoCd,KAAK,CAACe,SAA1C,CAAoD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;;AACA,UAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE,CALe,CAOf;;AACA,UAAMkB,SAAS,GAAG;AACdC,MAAAA,sBAAsB,EAAE,IADV;AACgB;AAC9BC,MAAAA,WAAW,EAAE,OAFC;AAGdC,MAAAA,iBAAiB,EAAE;AAHL,KAAlB;AAMA,UAAMC,KAAK,GAAGxB,WAAW,CAACW,WAAD,EACrBM,gBAAgB,CACZhB,eAAe,CAACG,KAAK,CAACqB,iBAAN,CAAwB;AAAEhB,MAAAA,WAAF;AAAeF,MAAAA;AAAf,KAAxB,CAAD,CADH,EAEZD,cAAc,CAACI,QAAD,CAFF,CAEc;AAFd,KADK,CAAzB;AAOA,UAAMgB,QAAQ,GAAG;AACbhB,MAAAA,QADa;AAEbiB,MAAAA,MAAM,EAAEP,SAFK;AAGbQ,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHH;AAIbvB,MAAAA,uBAJa,CAIY;;AAJZ,KAAjB;AAOA,SAAKwB,KAAL,GAAa;AACTL,MAAAA,KAAK,EAAEA,KADE;AAETE,MAAAA,QAAQ,EAAEA;AAFD,KAAb;AAIH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,0BAAD,oBAAgC,KAAKK,KAAL,CAAWH,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;;AA3C+C;;AA8CpD,eAAeb,qBAAf","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp"]},"metadata":{},"sourceType":"module"}